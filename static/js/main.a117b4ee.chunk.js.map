{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["PokemonRow","pokemon","name","english","type","join","App","style","margin","width","paddingTop","className","slice","map","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"s9hMAKMA,EAAa,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OACjB,+BACE,6BAAKA,EAAQC,KAAKC,UAClB,6BAAKF,EAAQG,KAAKC,KAAK,YA+CZC,MAjCf,WACE,OACE,sBACAC,MAAO,CACLC,OAAO,OACPC,MAAM,IACNC,WAAW,QAJb,UAOE,oBAAIC,UAAU,QAAd,4BACF,wBAAOF,MAAM,OAAb,UACE,gCACE,+BACE,sCACA,2CAGJ,gCAEIR,EACCW,MAAM,EAAE,IACRC,KAAI,SAACZ,GAAD,OACD,cAAC,EAAD,CAAYA,QAASA,GAAcA,EAAQa,gBChC1CC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a117b4ee.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport pokemon from './pokemon.json';\nimport './App.css';\n\nconst PokemonRow = ({pokemon}) => (\n  <tr>\n    <td>{pokemon.name.english}</td>\n    <td>{pokemon.type.join(', ')}</td>\n  </tr>\n);\n\nPokemonRow.propTypes = {\n  pokemon: PropTypes.shape({\n    name: PropTypes.shape({\n      english: PropTypes.string,\n    }),\n    type: PropTypes.arrayOf(PropTypes.string),\n  })\n};\n\n\nfunction App() {\n  return (\n    <div\n    style={{\n      margin:\"auto\",\n      width:800,\n      paddingTop:\"1rem\",\n    }} \n     >\n      <h1 className=\"title\">Pokemon Search</h1>\n    <table width=\"100%\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Type</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          pokemon\n          .slice(0,20)\n          .map((pokemon) => (\n              <PokemonRow pokemon={pokemon} key={pokemon.id}/>\n          ))\n        }\n\n      </tbody>\n      \n    </table>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}